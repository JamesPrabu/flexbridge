<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
	<RootDir>$(teamcity_build_checkoutDir)</RootDir>
  </PropertyGroup>

  <UsingTask TaskName="StampAssemblies" AssemblyFile="$(RootDir)/lib/net2.0/Palaso.BuildTasks.dll"/>
  <UsingTask TaskName="MakeWixForDirTree" AssemblyFile="$(RootDir)/lib/net2.0/Palaso.BuildTasks.dll"/>
  <UsingTask TaskName="Split" AssemblyFile="$(RootDir)/lib/net2.0/Palaso.BuildTasks.dll"/>
  <UsingTask TaskName="FileUpdate" AssemblyFile="$(RootDir)/lib/net2.0/Palaso.BuildTasks.dll"/>
  <UsingTask TaskName="NUnitTeamCity" AssemblyFile="$(teamcity_dotnet_nunitlauncher_msbuild_task)"/>
  <!-- From http://msbuildtasks.tigris.org/ Has UnZip task -->
  <Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets"/>

  <!-- ***************** Main build ***************** -->
  <PropertyGroup>
	<Solution>FLExBridge VS2010.sln</Solution>
	<ApplicationName>FLEx Bridge</ApplicationName>
	<Configuration>Release</Configuration>
  </PropertyGroup>

  <Import Project="$(RootDir)/build/build.common.proj"/>

  <Target Name="CreateDirectories">
	<MakeDir Directories="$(RootDir)/output/"/>
	<MakeDir Directories="$(RootDir)/output/Common"/>
	<MakeDir Directories="$(RootDir)/output/$(Configuration)/"/>
	<MakeDir Directories="$(RootDir)/output/Installer/"/>
  </Target>

	<ItemGroup>
		<ExistingObjectFiles
			Include="$(RootDir)/**/obj/**/*;$(RootDir)/output/**/*"
			Exclude="$(RootDir)/.hg/**/*"
		/>
	</ItemGroup>
  <ItemGroup>
	<OutputDirectory Include="$(RootDir)\output\" />
  </ItemGroup>
	<Target Name="Clean">
		<Message Text="Starting Clean"/>
		<Delete Files="@(ExistingObjectFiles)" />
	<RemoveDir Directories="$(OutputDirectory)" />
	<Message Text="End Clean"/>
	</Target>

  <Target Name="Build">
	<CallTarget Targets="Clean"/>
	<CallTarget Targets="CreateDirectories"/>
	<CallTarget Targets="SetAssemblyVersion"/>
	<CallTarget Targets="Compile"/>
	<Message Text="Build Complete"/>
  </Target>

  <Target Name="Compile" DependsOnTargets="UnzipMercurial">
	<MSBuild Projects="$(RootDir)/$(Solution)" Targets="Build" Properties="Configuration=$(Configuration)"/>
  </Target>

  <Target Name="UnzipMercurial" DependsOnTargets="CreateDirectories">
	<Unzip ZipFileName="$(RootDir)\lib\net2.0\Mercurial.zip"
	  TargetDirectory="$(RootDir)\output\Common"/>
	<Unzip ZipFileName="$(RootDir)\lib\net2.0\Mercurial.zip"
	  TargetDirectory="$(RootDir)\output\$(Configuration)"/>

	<Unzip ZipFileName="$(RootDir)\lib\net2.0\MercurialExtensions.zip"
	  TargetDirectory="$(RootDir)\output\Common"/>
	<Unzip ZipFileName="$(RootDir)\lib\net2.0\MercurialExtensions.zip"
	  TargetDirectory="$(RootDir)\output\$(Configuration)"/>
	<Unzip ZipFileName="$(RootDir)\lib\net2.0\MercurialExtensions.zip"
	  TargetDirectory="$(RootDir)"/>
  </Target>

  <!-- ***************** Testing ***************** -->

  <Target Name="Test" DependsOnTargets ="Build">
	<ItemGroup>
	  <TestAssemblies Include="$(RootDir)/output/Release/*Tests.dll;"  Exclude="**\obj\**" />
	</ItemGroup>
	<NUnitTeamCity Assemblies="@(TestAssemblies)" ExcludeCategory="SkipOnTeamCity" />
  </Target>

  <!-- *********************** Installer stuff below.  ******************************* -->

  <Target Name="MakeDownloadPointers" DependsOnTargets="VersionNumbers">

	<!-- copy it so we aren't modifying the original, which then is a pain on dev machines -->
	<Copy SourceFiles="$(RootDir)\src\Installer\DownloadPointers.htm"
	  DestinationFolder="$(RootDir)\output\Installer"/>

	<!-- replace some parts of the file with the version number & date -->
	<FileUpdate File="$(RootDir)\output\Installer\DownloadPointers.htm"
	  DatePlaceholder="DEV_RELEASE_DATE" Regex="DEV_VERSION_NUMBER" ReplacementText="$(Version)"/>

	<!-- push up to the web so that on our downloads page, we can give a link to the latest version -->
	<Message Text="Attempting rsync of DownloadPointers.htm" Importance="high"/>
	<Exec Command="&quot;c:\program files\cwRsync\bin\rsync.exe&quot; -vz -p --chmod=ug+rw,o+r -e&quot;\&quot;c:\program files\cwRsync\bin\ssh\&quot; -oUserKnownHostsFile=C:\BuildAgent\conf\known_hosts -oIdentityFile=C:\BuildAgent\conf\bob.key -l bob&quot;  &quot;../output/Installer/DownloadPointers.htm&quot; bob@palaso.org:/var/www/virtual/palaso.org/downloads/htdocs/FlexBridge/Index.html"/>
  </Target>

  <Target Name="Upload" DependsOnTargets="VersionNumbers; Installer">
	<Message Text="Attempting rsync of FLExBridgeInstaller.msi" Importance="high"/>

	<Exec Command="&quot;c:\program files\cwRsync\bin\rsync.exe&quot; -vz -p --chmod=ug+rw,o+r -e&quot;\&quot;c:\program files\cwRsync\bin\ssh\&quot; -oUserKnownHostsFile=C:\BuildAgent\conf\known_hosts -oIdentityFile=C:\BuildAgent\conf\bob.key -l bob&quot;  &quot;../output/Installer/FLExBridgeInstaller.msi&quot; bob@palaso.org:/var/www/virtual/palaso.org/downloads/htdocs/FlexBridge/FLExBridgeInstaller.msi"/>

	<CallTarget Targets="MakeDownloadPointers"/>
  </Target>

  <Target Name="SetAboutInfo" DependsOnTargets="VersionNumbers">

	<!-- replace some parts of the file with the version number & date -->
	<FileUpdate File="$(RootDir)\DistFiles\about.htm"
	  DatePlaceholder="DEV_RELEASE_DATE" Regex="DEV_VERSION_NUMBER" ReplacementText="$(Version)"/>

  </Target>

  <Target Name="Installer" DependsOnTargets="VersionNumbers; CreateDirectories; Build">
	<!-- set the version number in the installer configuration program.  Perhaps there's a way to just send in the variables rather than this brute-force
		changing of the script, but I haven't figured that out. -->
	<FileUpdate File="$(RootDir)\src\Installer\Installer.wxs"
	  Regex="Property_ProductVersion = &quot;.*&quot;" ReplacementText="Property_ProductVersion =
	  &quot;$(Version)&quot;"/>

	<Message Text="Making Installer Version: $(Version)" Importance="high"/>

	<MSBuild Projects="$(RootDir)\src\Installer\Installer.wixproj"/>

  </Target>

  <Target Name="MakeWixForDistFiles" DependsOnTargets="CreateDirectories; SetAboutInfo">
	<MakeWixForDirTree DirectoryReferenceId="INSTALLDIR" ComponentGroupId="DistFiles"
	  RootDirectory="$(RootDir)\DistFiles"
	  OutputFilePath="$(RootDir)\output\Installer\GeneratedDistFiles.wxs"
	  MatchRegExPattern=".*">
	  <!--what does this do?-->
	  <Output TaskParameter="OutputFilePath" ItemName="Compile"/>
	</MakeWixForDirTree>
  </Target>

  <Target Name="MakeWixForMercurialFiles" DependsOnTargets="UnzipMercurial; CreateDirectories">
	<!--
	  An apparent bug in the PathUtils in our custom tasks can't work
	  with the right root path, so we have to unzip it again
	  in a place it works.
	  The preferred root is:
	  RootDirectory="$(RootDir)\output\common\Mercurial"
	-->
	<Unzip ZipFileName="$(RootDir)\lib\net2.0\Mercurial.zip"
	  TargetDirectory="$(RootDir)\"/>
	<MakeWixForDirTree DirectoryReferenceId="MercurialDir" ComponentGroupId="MercurialFiles"
	  RootDirectory="$(RootDir)\Mercurial"
	  OutputFilePath="$(RootDir)\output\Installer\GeneratedMercurialFiles.wxs"
	  MatchRegExPattern=".*">
	  <!--what does this do? -->
	  <Output TaskParameter="OutputFilePath" ItemName="Compile"/>
	</MakeWixForDirTree>
	<Delete Files="$(RootDir)\Mercurial"
	  TreatErrorsAsWarnings="false"/>

	<Unzip ZipFileName="$(RootDir)\lib\net2.0\MercurialExtensions.zip"
	  TargetDirectory="$(RootDir)\"/>
	<MakeWixForDirTree DirectoryReferenceId="MercurialExtensionsDir" ComponentGroupId="MercurialExtensionsFiles"
	  RootDirectory="$(RootDir)\MercurialExtensions"
	  OutputFilePath="$(RootDir)\output\Installer\GeneratedMercurialExtensionsFiles.wxs"
	  MatchRegExPattern=".*">
	  <!--what does this do? -->
	  <Output TaskParameter="OutputFilePath" ItemName="Compile"/>
	</MakeWixForDirTree>
	<Delete Files="$(RootDir)\MercurialExtensions"
	  TreatErrorsAsWarnings="false"/>
  </Target>
</Project>
